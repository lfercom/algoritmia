arreglo[10,3] de cadena[50] diccionario

procedimiento cargar(var  arreglo[10,3] de cadena[50] diccionario)
inicio
    diccionario[1,1] <- "Academia"
    diccionario[1,2] <- "Academy"
    diccionario[1,3] <- "Academie"

    diccionario[2,1] <- "Bebe"
    diccionario[2,2] <- "Baby"
    diccionario[2,3] <- "Bebe"

    diccionario[3,1] <- "Computador"
    diccionario[3,2] <- "Computer"
    diccionario[3,3] <- "Ordinateur"
fin

procedimiento mostrar(arreglo[10,3] de cadena[50] diccionario)
    entero i,j,col
inicio
   para i <- 1 hasta 3 haga
       col <- 5
       para j <- 1 hasta 3 haga
           llamar posicionar_cursor(col,i)
           escriba diccionario[i,j]
           col <- col + 15
       fin para
   fin para
fin


procedimiento captura(arreglo[10,3] de cadena[50] diccionario)
    cadena[50] palabra
    entero origen,destino
inicio
        llamar posicionar_cursor(5,5)
        escriba "Palabra : "
        llamar posicionar_cursor(5,7)
        escriba "1. Espanol 2. Ingles 3. Frances : "
        llamar posicionar_cursor(5,9)
        escriba "1. Espanol 2. Ingles 3. Frances : "
        llamar posicionar_cursor(15,5)
        lea palabra
        llamar posicionar_cursor(40,7)
        lea origen
        llamar posicionar_cursor(40,9)
        lea destino
        llamar posicionar_cursor(5,11)
        escriba "Palabra traducida:  ", buscar(diccionario,palabra,origen,destino)    
fin

funcion buscar(arreglo[10,3] de cadena[50] diccionario, cadena[50] palabra,entero origen, entero destino): cadena[50]
    entero i,j
inicio
    para i <- 1 hasta 3 haga
       si (palabra = diccionario[i,origen]) entonces
           retorne diccionario[i,destino]
       fin si
    fin para
    retorne "Palabra no encontrada"
fin

inicio
    llamar captura()
fin