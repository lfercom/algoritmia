arreglo[10,4] de cadena[50] diccionario


procedimiento cargaDiccionario
inicio
    //Español - Ingles - frances
    diccionario[1,1] <- "Amor"
    diccionario[1,2] <- "Love"
    diccionario[1,3] <- "Amour"
    diccionario[2,1] <- "Casa"
    diccionario[2,2] <- "House"
    diccionario[2,3] <- "Mainson"
fin

procedimiento mostrar
    entero i,j,col
inicio
   
    para i <- 1 hasta 2 haga      
        col <- 5 
        para j <- 1 hasta 3 haga
            llamar posicionar_cursor(col,i)
            escriba diccionario[i,j]
            col <- col + 15
        fin para
    fin para
fin

procedimiento captura
    cadena[50] palabra
    entero idiomaOrigen,idiomaDestino
    caracter siga
inicio
    repita
        llamar limpiar_pantalla
        llamar posicionar_cursor(5,5)
        escriba "Palabra : "    
        llamar posicionar_cursor(5,7)
        escriba "1. Espanol 2. Ingles 3. Frances : "  
        llamar posicionar_cursor(5,9)
        escriba "1. Espanol 2. Ingles 3. Frances : "  
        llamar posicionar_cursor(15,5)
        lea palabra
        si (palabra <> ".") entonces
            llamar posicionar_cursor(40,7)
            lea idiomaOrigen
            llamar posicionar_cursor(40,9)
            lea idiomaDestino    
            llamar posicionar_cursor(5,11)
            escriba "Traduccion :" , traduce(diccionario,palabra,idiomaOrigen,idiomaDestino)   
            lea siga 
        fin si
    hasta(palabra = ".")
    
fin

funcion traduce(var arreglo[10,4] de cadena[50] diccionario, cadena[50] palabra, entero origen, entero destino) : cadena[50]
    entero i
inicio
    para i <- 1 hasta 2 haga
        si (palabra = diccionario[i,origen]) entonces
            retorne diccionario[i,destino]
        fin si
    fin para
    retorne "Palabra no encontrada"
fin


inicio
    llamar cargaDiccionario
    
    llamar captura
fin